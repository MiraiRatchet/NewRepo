name: CI

on:
  push:
    branches:
      - hw1

env:
  BUILD_TYPE: Debug

jobs:
  cppcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install cppcheck
        run: |
          sudo apt-get update -y
          sudo apt-get install -y cppcheck

      - name: Run cppcheck
        run: cppcheck --enable=all --suppress=missingInclude --std=c++20 ./src ./tests

  clang-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install clang-format
        run: |
          sudo apt-get update -y
          sudo apt-get install -y clang-format

      - name: Run clang-format
        run: clang-format --dry-run --Werror -style=file:./config/.clang-format ./src/*.cpp ./App/include/*.hpp ./App/src/*.cpp

  build:
    needs: [ cppcheck, clang-format, cpplint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install clang-tidy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y cmake

      - name: Build
        run: |
          cmake -B build
          cmake --build build

  clang-tidy:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install clang-tidy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y clang-tidy

      - name: Run clang-tidy
        run: |
          clang-tidy --config-file=./config/.clang-tidy ./src/*.cpp ./App/src/App.cpp ./App/include/App.hpp -p build
          clang-tidy --config-file=./config/.clang-tidy ./tests/*.cpp -p build

  cpplint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install cpplint
        run: |
          sudo apt-get update -y
          sudo apt-get install -y cpplint

      - name: Run cpplint
        run: cpplint --recursive --filter=-build/include_subdir --filter=-runtime/int --root=./ ./src ./App/src ./App/include ./tests

  test:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install gtest
        run: |
          sudo apt-get install -y libgtest-dev

      - name: Run tests
        run: ctest --output-on-failure --repeat-until-fail 100 --test-dir ./build/tests           

#   sudo chmod a+x ./build/tests/main_tests                     
#   sudo valgrind --leak-check=full -s ./build/tests/main_tests     
